{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM55Jh6WiRncHZRUYzmJnyR"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ko8ikP47-n0Z","executionInfo":{"status":"ok","timestamp":1742632633277,"user_tz":-420,"elapsed":43,"user":{"displayName":"Muhammad Dafa Falah Labib","userId":"12141881049201244595"}},"outputId":"ef9d8bc3-a415-4590-a011-61c61a79bb82"},"outputs":[{"output_type":"stream","name":"stdout","text":["Gita 95\n","Dewi 92\n","Budi 90\n","Eko 88\n","Ahmad 85\n","Citra 78\n","Fajar 76\n"]}],"source":["def quick_sort(mahasiswa):\n","    if len(mahasiswa) <= 1:\n","        return mahasiswa\n","    pivot = mahasiswa[len(mahasiswa) // 2][1]\n","    left = [m for m in mahasiswa if m[1] > pivot]  # Lebih besar dari pivot\n","    middle = [m for m in mahasiswa if m[1] == pivot]  # Sama dengan pivot\n","    right = [m for m in mahasiswa if m[1] < pivot]  # Lebih kecil dari pivot\n","    return quick_sort(left) + middle + quick_sort(right)\n","\n","# Data mahasiswa (nama, nilai)\n","mahasiswa = [\n","    (\"Ahmad\", 85),\n","    (\"Budi\", 90),\n","    (\"Citra\", 78),\n","    (\"Dewi\", 92),\n","    (\"Eko\", 88),\n","    (\"Fajar\", 76),\n","    (\"Gita\", 95)\n","]\n","\n","hasil_sorting = quick_sort(mahasiswa)\n","\n","for nama, nilai in hasil_sorting:\n","    print(nama, nilai)\n"]}]}